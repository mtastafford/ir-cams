from pixy import *
from ctypes import *
import numpy as np

# Pixy Python SWIG get blocks example #
dt=0.02 #TIME STEP -- 0.02 = 50Hz AS PER PIXYCAM
A=np.array([(1,dt,0,0),(0,1,0,0),(0,0,1,dt),(0,0,0,1)]) #STATE MATRIX DEFINING HOW X & Y POS,VEL,ACCL UPDATE
Xkp=np.array([(50),(3),(100),(5)]) #PREVIOUS STATE VECTOR DEFINIng t-1 Px, Py, Vx, Vy
Zk=np.array([(0),(0)]) #MEASUREMENT MATRIX SKELETON - NOTE THAT ONLY Px & Py ARE MEASURED
Pkp=np.zeros(16).reshape(4,4)#PREVIOUS STATE COVARIANCE MATRIX DEFINING INITIAL COVAR EST.
np.fill_diagonal(Pkp,1)
print ("Pixy Python SWIG Example -- Get Blocks")
Xk=A.dot(Xkp) #PREDICTED STATE BASED ON PREVIOUS STATE AND TIME ELAPSED
print(Xk)
print(Pkp)

# Initialize Pixy Interpreter thread #
pixy_init()

class Blocks (Structure):
  _fields_ = [ ("type", c_uint),
               ("signature", c_uint),
               ("x", c_uint),
               ("y", c_uint),
               ("width", c_uint),
               ("height", c_uint),
               ("angle", c_uint) ]

blocks = BlockArray(100)
frame  = 0

# Wait for blocks #
while 1:

  #count = pixy_get_blocks(100, blocks)
    if count > 0:
  # Blocks found #
    print 'frame %3d:' % (frame)
    frame = frame + 1
    for index in range (0, count):
      print '[BLOCK_TYPE=%d SIG=%d X=%3d Y=%3d WIDTH=%3d HEIGHT=%3d]' % (blocks[index].type, blocks[index].signature, blocks[index].x, blocks[index].y, blocks[index].width, blocks[index].height)
    count=count-1
